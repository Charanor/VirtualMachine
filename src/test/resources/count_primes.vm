////// This is the Java code we wish to translate into bytecode
// int numPrimes = 0;
// outer:
// for(int n = 0; n < 100; n++) {
//    if (n % 2 == 0) continue;
//    for(int i = 3; i * i <= n; i += 2) {
//        if(n % i == 0)
//            continue outer;
//    }
//    numPrimes++;
// }

////// Here is the bytecode
#define END_VALUE = 1000

// Variable definitions
#define n = 0x00

literal 0

[start]
	load #n
	literal #END_VALUE
	cmp
	jmpGE end
	call is_prime
	jmpEQ skip_inc
	literal 1
	add
	
	[skip_inc]
	load #n
	literal 1
	add
	store #n
	jmp start
	
	[is_prime]
		load #n
		literal 0x02
		mod
		jmpEQ is_mod_2
		call check_mod_i
		return
		
		[is_mod_2]
		literal 0x00
		return
	
		[check_mod_i]
		literal 3
		[check_mod_i_start]
		dup		
		dup
		mul
		load #n
		cmp 
		jmp_GT check_mod_i_exit
		dup
		load #n
		swap
		mod
		jmpNE not_zero
		discard
		literal 0x00
		return
		
		[not_zero]
		literal 2
		add
		jmp check_mod_i_start
		
		[check_mod_i_exit]
		discard
		literal 0xff
		return
[end]
